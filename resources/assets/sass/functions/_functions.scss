/**
 * Talent Linker - SCSS - Functions
 *
 * since		29.11.2016
 * version		1.0.0.0
 * author		mlbors
 * copyright	-
 */

/**************************/
/********** MAPS **********/
/**************************/

/**********/
/********** DEEP GET **********/
/**********/

/*
 * @param $map              Map
 * @param $keys             Keys to fetch
 * @return $map
 */

@function map-deep-get($map, $keys...) {
    
    @each $key in $keys {
        $map: map-get($map, $key);
    }

    @return $map;
    
}

/**********/
/********** DEEP SET **********/
/**********/

/*
 * @param $map              Map
 * @param $keys             Keys to fetch
 * @return $result
 */

@function map-deep-set($map, $keys...) {
    
    $map-list: ($map,);
    $result: null;

    @if length($keys) == 2 {
        @return map-merge($map, (nth($keys, 1): nth($keys, -1)));
    }

    @for $i from 1 through length($keys) - 2 {
        $map-list: append($map-list, map-get(nth($map-list, -1), nth($keys, $i)));
    }

    @for $i from length($map-list) through 1 {
        $result: map-merge(nth($map-list, $i), (nth($keys, $i): if($i == length($map-list), nth($keys, -1), $result)));
    }

    @return $result;
}

/**********/
/********** MAP DEPTH **********/
/**********/

/*
 * @param $map              Map
 * @return $result
 */

@function map-depth($map) {
    $level: 1;

    @each $key, $value in $map {
        @if type-of($value) == "map" {
            $level: max(map-depth($value) + 1, $level);
        }
    }

    @return $level;
}

/**********/
/********** MAP HAS KEY **********/
/**********/

/*
 * @param $map              Map
 * @param $keys             Keys to fetch
 * @return Bool
 */

@function map-has-keys($map, $keys...) {
    
    @each $key in $keys {
        @if not map-has-key($map, $key) {
            @return false;
        }
    }

    @return true;
    
}

/**********/
/********** MAP HAS NESTED KEY **********/
/**********/

/*
 * @param $map              Map
 * @param $keys             Keys to fetch
 * @return Bool
 */

@function map-has-nested-keys($map, $keys...) {
    
    @each $key in $keys {
        @if not map-has-key($map, $key) {
            @return false;
        }
        $map: map-get($map, $key);
    }

    @return true;
    
}

/********************************************************************************/
/********************************************************************************/